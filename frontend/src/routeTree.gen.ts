/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated.index'
import { Route as AuthenticatedProjectsImport } from './routes/_authenticated.projects'
import { Route as AuthenticatedMembersImport } from './routes/_authenticated.members'
import { Route as AuthenticatedProjectsIndexImport } from './routes/_authenticated.projects.index'
import { Route as AuthenticatedTicketsTicketIdImport } from './routes/_authenticated.tickets.$ticketId'
import { Route as AuthenticatedProjectsProjectIdImport } from './routes/_authenticated.projects.$projectId'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProjectsRoute = AuthenticatedProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMembersRoute = AuthenticatedMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProjectsIndexRoute = AuthenticatedProjectsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedProjectsRoute,
  } as any,
)

const AuthenticatedTicketsTicketIdRoute =
  AuthenticatedTicketsTicketIdImport.update({
    id: '/tickets/$ticketId',
    path: '/tickets/$ticketId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedProjectsProjectIdRoute =
  AuthenticatedProjectsProjectIdImport.update({
    id: '/$projectId',
    path: '/$projectId',
    getParentRoute: () => AuthenticatedProjectsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/members': {
      id: '/_authenticated/members'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof AuthenticatedMembersImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/projects': {
      id: '/_authenticated/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthenticatedProjectsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/projects/$projectId': {
      id: '/_authenticated/projects/$projectId'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof AuthenticatedProjectsProjectIdImport
      parentRoute: typeof AuthenticatedProjectsImport
    }
    '/_authenticated/tickets/$ticketId': {
      id: '/_authenticated/tickets/$ticketId'
      path: '/tickets/$ticketId'
      fullPath: '/tickets/$ticketId'
      preLoaderRoute: typeof AuthenticatedTicketsTicketIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/projects/': {
      id: '/_authenticated/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof AuthenticatedProjectsIndexImport
      parentRoute: typeof AuthenticatedProjectsImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedProjectsRouteChildren {
  AuthenticatedProjectsProjectIdRoute: typeof AuthenticatedProjectsProjectIdRoute
  AuthenticatedProjectsIndexRoute: typeof AuthenticatedProjectsIndexRoute
}

const AuthenticatedProjectsRouteChildren: AuthenticatedProjectsRouteChildren = {
  AuthenticatedProjectsProjectIdRoute: AuthenticatedProjectsProjectIdRoute,
  AuthenticatedProjectsIndexRoute: AuthenticatedProjectsIndexRoute,
}

const AuthenticatedProjectsRouteWithChildren =
  AuthenticatedProjectsRoute._addFileChildren(
    AuthenticatedProjectsRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedMembersRoute: typeof AuthenticatedMembersRoute
  AuthenticatedProjectsRoute: typeof AuthenticatedProjectsRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedTicketsTicketIdRoute: typeof AuthenticatedTicketsTicketIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedMembersRoute: AuthenticatedMembersRoute,
  AuthenticatedProjectsRoute: AuthenticatedProjectsRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedTicketsTicketIdRoute: AuthenticatedTicketsTicketIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRoute
  '/members': typeof AuthenticatedMembersRoute
  '/projects': typeof AuthenticatedProjectsRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/projects/$projectId': typeof AuthenticatedProjectsProjectIdRoute
  '/tickets/$ticketId': typeof AuthenticatedTicketsTicketIdRoute
  '/projects/': typeof AuthenticatedProjectsIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/members': typeof AuthenticatedMembersRoute
  '/': typeof AuthenticatedIndexRoute
  '/projects/$projectId': typeof AuthenticatedProjectsProjectIdRoute
  '/tickets/$ticketId': typeof AuthenticatedTicketsTicketIdRoute
  '/projects': typeof AuthenticatedProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRoute
  '/_authenticated/members': typeof AuthenticatedMembersRoute
  '/_authenticated/projects': typeof AuthenticatedProjectsRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/projects/$projectId': typeof AuthenticatedProjectsProjectIdRoute
  '/_authenticated/tickets/$ticketId': typeof AuthenticatedTicketsTicketIdRoute
  '/_authenticated/projects/': typeof AuthenticatedProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/members'
    | '/projects'
    | '/'
    | '/projects/$projectId'
    | '/tickets/$ticketId'
    | '/projects/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/members'
    | '/'
    | '/projects/$projectId'
    | '/tickets/$ticketId'
    | '/projects'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/_authenticated/members'
    | '/_authenticated/projects'
    | '/_authenticated/'
    | '/_authenticated/projects/$projectId'
    | '/_authenticated/tickets/$ticketId'
    | '/_authenticated/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/auth"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/members",
        "/_authenticated/projects",
        "/_authenticated/",
        "/_authenticated/tickets/$ticketId"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/_authenticated/members": {
      "filePath": "_authenticated.members.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects": {
      "filePath": "_authenticated.projects.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/projects/$projectId",
        "/_authenticated/projects/"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects/$projectId": {
      "filePath": "_authenticated.projects.$projectId.tsx",
      "parent": "/_authenticated/projects"
    },
    "/_authenticated/tickets/$ticketId": {
      "filePath": "_authenticated.tickets.$ticketId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects/": {
      "filePath": "_authenticated.projects.index.tsx",
      "parent": "/_authenticated/projects"
    }
  }
}
ROUTE_MANIFEST_END */
